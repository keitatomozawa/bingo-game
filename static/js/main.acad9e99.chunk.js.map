{"version":3,"sources":["components/NumberField.js","container/MainField.js","components/HistoryView.js","container/History.js","components/RouletteButton.js","container/ControlButton.js","actions.js","components/TableCell.js","container/NumberTable.js","container/ResetController.js","components/App.js","bingo.js","index.js","reducers.js"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","primary","NumberField","displayed","classes","Paper","className","Box","fontSize","MainField","connect","state","ownProps","dispatch","root","flexGrow","HistoryView","history","Grid","container","xs","slice","concat","Array","fill","map","num","idx","key","item","History","RouletteButton","started","onStartClick","onStopClick","Button","onClick","fullWidth","variant","ControlButton","intervalId","setInterval","type","startRoulette","TableCell","appeared","style","background","align","table","array","val","tables","i","j","length","push","TableBody","chunk","TableRow","cell","ResetController","input","onSubmit","e","preventDefault","value","trim","maxNum","resetGame","ref","node","App","Container","maxWidth","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","ExpansionPanelDetails","NumberTable","start","stop","clearInterval","remains","filter","n","b","tick","getRandomInt","min","max","Math","ceil","floor","random","reset","initialState","keys","store","createStore","bingo","action","console","log","Number","render","document","getElementById"],"mappings":"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","file":"static/js/main.acad9e99.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    Box,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nconst NumberField = ({ displayed }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Box fontSize={480}>\r\n                {displayed}\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default NumberField","import { connect } from 'react-redux'\r\nimport NumberField  from '../components/NumberField';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        displayed: state.displayed,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({});\r\n\r\nconst MainField = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(NumberField);\r\n\r\nexport default MainField","import React from 'react';\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    Box\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nconst HistoryView = ({ history }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container spacing={2} xs={12}>\r\n            {history.slice(0, 12).concat(Array(12).fill(\"ã€€\")).slice(0, 12).map((num, idx) => (\r\n                <Grid key={idx} item xs={1}>\r\n                    <Paper className={classes.paper} >\r\n                        <Box fontSize={32}>{num}</Box>\r\n                    </Paper>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n};\r\n\r\n\r\nexport default HistoryView","import { connect } from 'react-redux'\r\nimport HistoryView from  '../components/HistoryView';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        history: state.history,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({});\r\n\r\nconst History = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HistoryView);\r\n\r\nexport default History","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst RouletteButton = ({ started, onStartClick, onStopClick }) => (\r\n    <div>\r\n        {\r\n            started ?\r\n                <Button onClick={onStopClick} color=\"secondary\" fullWidth={true} variant=\"contained\">STOP</Button>\r\n                :<Button onClick={onStartClick} color=\"primary\" fullWidth={true} variant=\"contained\">START</Button>\r\n        }\r\n    </div>\r\n);\r\n\r\nRouletteButton.propTypes = {\r\n    started: PropTypes.bool.isRequired,\r\n    onStartClick: PropTypes.func.isRequired,\r\n    onStopClick:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RouletteButton","import { connect } from 'react-redux'\r\nimport RouletteButton from '../components/RouletteButton.js';\r\nimport {startRoulette, stopRoulette, tickNumber} from '../actions.js'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        started: state.started,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onStartClick: () => {\r\n            const intervalId = setInterval( () => dispatch(tickNumber(), 500));\r\n            dispatch(startRoulette(intervalId));\r\n        },\r\n        onStopClick: () => {\r\n            dispatch(stopRoulette());\r\n        }\r\n    }\r\n};\r\n\r\nconst ControlButton = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RouletteButton);\r\n\r\nexport default ControlButton","/*\r\n * action types\r\n */\r\nexport const START_ROULETTE = 'START_ROULETTE';\r\nexport const STOP_ROULETTE = 'STOP_ROULETTE';\r\nexport const TOGGLE_VIEW = 'TOGGLE_VIEW';\r\nexport const TICK = 'TICK';\r\nexport const RESET_GAME = 'RESET_GAME';\r\n\r\n/*\r\n * other constants\r\n */\r\n\r\nexport const Views = {\r\n    GAME: 'GAME',\r\n    SETTINGS: 'SETTINGS',\r\n    HISTORY: 'HISTORY'\r\n};\r\n\r\n/*\r\n * action creators\r\n */\r\nexport const startRoulette = (intervalId) => ({\r\n    type: START_ROULETTE,\r\n    intervalId\r\n});\r\n\r\nexport const stopRoulette = () => ({\r\n   type: STOP_ROULETTE\r\n});\r\n\r\nexport const resetGame = (maxNum=75) => ({\r\n    type: RESET_GAME,\r\n    maxNum\r\n});\r\n\r\nexport const tickNumber = () => ({\r\n    type: TICK\r\n});\r\n\r\nexport const toggleView = (view)  => ({\r\n    type: TOGGLE_VIEW,\r\n    view\r\n});","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport MaterialTableCell from '@material-ui/core/TableCell';\r\n\r\nconst TableCell = ({ appeared, num }) => (\r\n    <MaterialTableCell\r\n        style={{\r\n            color: appeared ? \"red\" : \"black\",\r\n            background: appeared ? \"#87f3ff\" : \"transparent\",\r\n        }}\r\n        align={\"center\"}\r\n    >\r\n        <span style={{fontSize: \"3em\"}}>{num}</span>\r\n    </MaterialTableCell>\r\n);\r\n\r\nTableCell.propTypes = {\r\n    appeared : PropTypes.bool.isRequired,\r\n    num: PropTypes.number.isRequired\r\n};\r\n\r\nexport default TableCell","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport TableCell from '../components/TableCell.js';\r\nimport MaterialTable from  '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst Table = ({ table }) => {\r\n    const array = table.map((val, idx)=> ({num: idx+1, appeared: val}));\r\n    const tables = [];\r\n    for (let i=0,j=array.length; i<j; i+=10) {\r\n         tables.push(array.slice(i,i+10));\r\n    }\r\n\r\n    return (\r\n        <MaterialTable>\r\n            <TableBody>\r\n                {\r\n                    tables.map((chunk)=>(\r\n                        <TableRow>\r\n                            {chunk.map((cell)=> <TableCell num={cell.num} appeared={cell.appeared}/>)}\r\n                        </TableRow>\r\n                    ))\r\n                }\r\n            </TableBody>\r\n        </MaterialTable>\r\n    )\r\n\r\n};\r\n\r\nTable.propTypes = {\r\n    table: PropTypes.arrayOf(PropTypes.bool.isRequired).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    table: state.table,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Table)\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { resetGame } from '../actions'\r\n\r\nlet ResetController = ({ dispatch }) => {\r\n    let input;\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (!input.value.trim()) {\r\n                        return\r\n                    }\r\n                    dispatch(resetGame(input.value));\r\n                    input.value = ''\r\n                }}\r\n            >\r\n                <input\r\n                    ref={node => {\r\n                        input = node\r\n                    }}\r\n                />\r\n                <button type=\"submit\">Reset</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nResetController = connect()(ResetController)\r\n\r\nexport default ResetController","import React from 'react';\nimport MainField from '../container/MainField';\nimport History from '../container/History';\nimport ControlButton from '../container/ControlButton';\nimport NumberTable from '../container/NumberTable';\nimport ResetController from  '../container/ResetController';\nimport {\n    Grid,\n    Container,\n    ExpansionPanel,\n    ExpansionPanelSummary,\n    ExpansionPanelDetails\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst App = () => {\n  return (\n      <Container maxWidth={\"xl\"}>\n          <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <MainField/>\n              </Grid>\n              <Grid item xs={12}>\n                <ControlButton/>\n              </Grid>\n              <Grid item xs={12}>\n                <History/>\n              </Grid>\n              <Grid item xs={12}>\n                  <ExpansionPanel>\n                      <ExpansionPanelSummary\n                          expandIcon={<ExpandMoreIcon/>}\n                          aria-controls=\"table-content\"\n                          id=\"table-header\">\n                          Table\n                      </ExpansionPanelSummary>\n                      <ExpansionPanelDetails>\n                          <NumberTable/>\n                      </ExpansionPanelDetails>\n                  </ExpansionPanel>\n              </Grid>\n              <Grid item xs={12}>\n                  <ResetController/>\n              </Grid>\n          </Grid>\n      </Container>\n  )\n};\n\nexport default App;\n","export const start = (state, intervalId) => ({\r\n    ...state,\r\n    started: true,\r\n    intervalId: intervalId\r\n});\r\n\r\nexport const stop = (state) => {\r\n    clearInterval(state.intervalId);\r\n\r\n    return {\r\n        ...state,\r\n        started: false,\r\n        remains: state.remains.filter(n => n !== state.displayed),\r\n        table: state.table.map((b, i) => i===state.displayed-1?true:b),\r\n        history: [state.displayed, ...state.history],\r\n        intervalId: -1\r\n    }\r\n};\r\n\r\nexport const tick = (state) => ({\r\n    ...state,\r\n    displayed: state.remains[getRandomInt(0, state.remains.length)]\r\n});\r\n\r\n\r\n\r\nconst getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\nexport const reset = (state, maxNum) => {\r\n    clearInterval(state.intervalId);\r\n    return initialState(maxNum);\r\n};\r\n\r\nexport const initialState = (maxNum=75) => ({\r\n    started: false,\r\n    intervalId: -1,\r\n    displayed: 1,\r\n    remains: [...Array(maxNum).keys()].map(i => ++i),\r\n    table: Array(maxNum).fill(false),\r\n    history: []\r\n});","import React from 'react'\nimport {Provider} from 'react-redux'\nimport {render} from 'react-dom'\nimport {createStore} from 'redux'\n\nimport App from './components/App';\nimport {rootReducer} from './reducers.js'\n\nconst store = createStore(rootReducer);\n\n// console.log(store.getState());\n// const unsbscribe = store.subscribe(()=>console.log(store.getState()));\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('app')\n);","import * as bingo from './bingo.js';\r\nimport { START_ROULETTE, STOP_ROULETTE, RESET_GAME, TICK } from './actions.js';\r\n\r\nexport const rootReducer = (state=bingo.initialState(), action) => {\r\n    switch (action.type) {\r\n        case START_ROULETTE:\r\n            return bingo.start(state, action.intervalId);\r\n        case STOP_ROULETTE:\r\n            return bingo.stop(state);\r\n        case TICK:\r\n            return bingo.tick(state);\r\n        case RESET_GAME:\r\n            console.log(action.maxNum);\r\n            return bingo.reset(state, Number(action.maxNum));\r\n        default:\r\n            return state;\r\n    }\r\n};"],"sourceRoot":""}